class Solution {
    int getMinDiff(int[] arr, int k) {
        int n = arr.length;
        if (n == 1) return 0; // Single element case
        
        Arrays.sort(arr); // Sort the array first
        
        int minDiff = arr[n - 1] - arr[0]; // Initial difference

        for (int i = 0; i < n - 1; i++) {
            int minHeight = Math.min(arr[0] + k, arr[i + 1] - k);
            int maxHeight = Math.max(arr[i] + k, arr[n - 1] - k);

            if (minHeight < 0) continue; // Ignore negative heights
            
            minDiff = Math.min(minDiff, maxHeight - minHeight);
        }

        return minDiff;
    }
}
